"""
Django settings for eurovision_data project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import configparser
from pathlib import Path
from .logger_settings import LoggerSettings

BASE_DIR = Path(__file__).resolve().parent.parent

CONFIG_FILE = ''

ENV = os.environ.get('ENVIRONMENT') or 'DEVELOPMENT'


parser = configparser.ConfigParser(allow_no_value=True)

EURO_YOUTUBE_COUNTER_DATA_DIR = BASE_DIR / 'video_data' / 'eurovision_youtube_counter' / 'data'
JSON_LOCATION = EURO_YOUTUBE_COUNTER_DATA_DIR / 'videos.json'
JSON_CONTEST_RESULTS_LOCATION = EURO_YOUTUBE_COUNTER_DATA_DIR / 'eurocontests_results.json'

with open(BASE_DIR / 'eurovision_data' / 'secrets' / 'secret_key.txt') as f:
    SECRET_KEY = f.read().strip()

DEBUG = False
if ENV == 'PRODUCTION':
    DEBUG = False
elif ENV == 'DEVELOPMENT':
    DEBUG = True
else:
    raise EnvironmentError('Neither PRODUCTION nor DEVELOPMENT environments detected,'
                           'you may need to configure the enviroment variable \"ENVIRONMENT\" to be either '
                           '\"PRODUCTION\" or \"DEVELOPMENT\"')

if DEBUG:
    CONFIG_FILE = BASE_DIR / 'eurovision_data' / 'config' / 'dev.ini'
    parser.read(CONFIG_FILE)
    logger_location = BASE_DIR / 'logs'
    if not logger_location.exists():
        logger_location.mkdir()
else:
    CONFIG_FILE = BASE_DIR / 'eurovision_data' / 'config' / 'prod.ini'
    parser.read(CONFIG_FILE)
    logger_location = Path('var') / 'log' / 'euro_counter'
logger_settings = LoggerSettings(logger_location.__str__())
LOGGING = logger_settings.get_logger_settings()

ALLOWED_HOSTS = []

# This fixes an issue where youtube videos were not embedded properly.
# Solution found here: https://stackoverflow.com/questions/51424578/embed-youtube-code-is-not-working-in-html
SECURE_REFERRER_POLICY = "no-referrer-when-downgrade"

for key, host in parser.items('ALLOWED_HOSTS'):
    ALLOWED_HOSTS.append(host)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'video_data',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eurovision_data.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eurovision_data.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# This fixes a problem with the being run twice in Django when it is in debug mode.
# The solution was found here:
# https://stackoverflow.com/questions/26682413/django-rotating-file-handler-stuck-when-file-is-equal-to-maxbytes
if DEBUG and os.environ.get('RUN_MAIN', None) != 'true':
    LOGGING = {}
